"Basic CP snippet with gcd,palindrome and modular inverse": {
  "prefix": "basic",
  "body": [
    "#include <bits/stdc++.h>",
    "using namespace std;",
    "#define ll long long",
    "#define mod 1000000007",
    "#define endl \"\\n\" //avoid it in interactive problems",
    "",
    "int gcd(int a,int b)",
    "{",
    "    if(a && b)",
    "        while(a%=b^=a^=b^=a);",
    "    return a+b;",
    "}",
    "",
    "int modular_inverse(int a, int m) {",
    "    return a < 2 ? a : ((1 - m * 1ll * modular_inverse(m % a, a)) / a % m + m) % m;",
    "} // returns 0 if gcd(a,m) != 1.",
    "",
    "inline bool isPalindrome(const string& s){",
    "    return std::equal(s.begin(), s.end(), s.rbegin());",
    "}",
    "",
    "void solve()",
    "{",
    "    ",
    "}",
    "int main() {",
    "    ios_base::sync_with_stdio(false);",
    "    cin.tie(NULL);cout.tie(NULL);",
    "    #ifndef ONLINE_JUDGE",
    "    freopen(\"input.txt\", \"r\", stdin);",
    "    freopen(\"output.txt\", \"w\", stdout);",
    "    #endif",
    "",
    "    ll test=1;",
    "    cin>>test;",
    "    while(test--)",
    "    {",
    "        solve();",
    "    }",
    "    return 0;",
    "}",
    ""
  ],
  "description": "Basic CP snippet with gcd,palindrome and modular inverse"
}
